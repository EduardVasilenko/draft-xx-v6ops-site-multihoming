Let us assume that a site is connected to the Internet through many carriers, with every carrier delegating a PA prefix (most likely using DHCP-PD). We will also assume for this example that the local CPE performs no proprietary functions and that hosts are provisioned with an address from each PA allocation. 

It is mandatory to implement requirement L-13 of [HNCP] section 11 to deprecate delegated prefixes (set preferred time to zero) if the router has information about path loss to the carrier that sourced the prefix. [HNCP] is the only standard track document that requests to propagate the prefix unavailability information to the host.
[Node Requirements] does not make DHCP mandatory for address assignment. Many popular client operating systems do not support DHCP even for other configuration, despite the fact that it “should”, according to [Node Requirements]. Hence, for the general case, we should assume that address assignment and configuration is done by [SLAAC]. Note that the logic below would not change if DHCP were to be used for address assignment.
As a result, we have a host with many IP addresses that needs to choose the source address and the next hop before any communication attempts it may wish to make.
Potentially, the application on the host may use bind() to choose the source address first using any logic pre-programmed into the application. This application-driven solution is the only current way to access the “subscriber-only services” of the particular carrier, and for steering traffic based on cost, latency, packet loss, hop count, etc.
After the application selects the proper source address with bind(), it needs to choose the next hop to serve it.
There are two options to accomplish this:
1) [Multi-Homing] section 3.2 has an augmentation to [ND] section 6.3.6 asking to prefer default routers that advertised the particular prefix already used for the source address.
2) [Route Preferences] to install the external prefix into the host's routing table.
It may be valuable to implement [Provisioning domains] to supply along with DNS resolvers the relationship of such resolvers to each prefix provided by the different carriers, as unrelated resolvers may respond with unusable or missing information when queried for "subscriber-only services". In any case, IP stacks of host OSes are, in practice, not capable of accepting and using this additional information – so it would not play any role in the decision-making process.
The implementer should check that the functionality mentioned in this paragraph is supported on routers and applications before relying on it in designs. Unfortunately, [Provisioning domains] and [Multi-Homing] have low acceptance on the market, and hence the application-driven solution for carrier resiliency has a low probability of having been implemented, and at best would be inconsistent.
Let us now consider the more typical case in which the application is simplified in its networking aspects. In that case the application would use getaddrinfo(), which is typically compliant with [SASA] on all OSes. This solution is referred to as "host-driven" within this section.

For historical reasons, getaddrinfo() selects the next hop first. By default, the next hop is chosen in a random round-robin manner between all available routers on the particular link (in accordance with [ND] section 6.3.6).
Rule 5.5 of [SASA] section 5 will then prefer, in the list of available source addresses, those inside prefixes that are already advertised by the chosen next hop. Hence, the random next hop leads in turn to a random source address choice among those available.
Such behavior may block the possibility of accessing the “subscriber-only services” of a particular carrier (traffic would be filtered due to having a source address belonging to a different carrier) as well as prevent traffic steering by any sort of policy.
Moreover, even if [Provisioning domains] were to be implemented, the recommendation for random next hop choice would prevent effective use of it.
Simple Internet connectivity with carrier resiliency could be achieved in this manner, as carrier resiliency would work on a basic level albeit with unpredictable traffic distribution between the carriers. All that is needed for this is to support rule 5.5 of [SASA] section 5.
Importantly, in addition to supporting rule 5.5 of [SASA], the router should also support the L-13 requirement of [HNCP] to deprecate prefixes individually and not the default router status itself. This is the only way for convergence to take place effectively in the case of connectivity loss to the PA carrier.

[MHMP] discusses that it is possible to achieve traffic steering supplying policies by two mechanisms:
1) “Routing Information Options” of [Route Preferences] to influence next hop choice
2) [Policy by DHCP] to modify policies in the [SASA] source address selection algorithm.
The latter method is considered impractical because of its complexity and general lack of DHCPv6 support in many commonly deployed operating systems.
One of the drawbacks of the PA-based solution is that it can fail to meet the requirements for realtime traffic steering based on measured link-quality and upper-layer information. While PA-based traffic steering using the methods described above can be sufficient in some environments, it must be kept in mind that the decision of which link to exit from is ultimately left to the host in the form of source address selection. In environments performing application-based traffic steering, it is instead crucial that the steering decision be made by the edge device, due to it having a policy table based on network, transport, and application-layer aspects of packets as well as realtime link quality metrics. This policy represents the intent of the administrator and, ultimately, the business requirements of the organization which owns the network; it may for various reasons not discussed in this document have been deemed unfeasible to replicate and apply this policy table directly at the host level inside the clients. In the PA-based solution, the host has access to prefixes from all available Internet links and can assign itself routable addresses from them, and is thus free to ignore any policy configured on the edge device. The gateway is in fact forced to forward the packet in a way that honors the source address chosen by the host, lest the packet be dropped upstream due to implementations of [BCP38]. Once the traffic leaves the network through the correct uplink, however, the return path is guaranteed to be symmetric due to the address selected by the host being routed only to one of the Internet links; this could be considered to satisfy requirement 7 of section 4 with regards to the inbound portion of traffic steering.

Finally, in the case where a site has many links and routers (complex topology) then source routing or other connection tracking mechanism in the internal network is mandatory to deliver the traffic to the carrier owning the source address of the packet. This aspect is properly discussed in [MHMP Enterprise], albeit it is not yet of any use in the PA-based scenario because the delegated PA prefix should since the beginning be dynamically split into smaller prefixes and propagated to all links throughout the site, and there is currently no accepted and available method to do this. Such a method should also assist with the prefix deprecation in the case when connectivity to the carrier is lost. This is not supported at the moment because neither [HNCP] nor DHCP-PD have gained acceptance for this purpose. There is thus a chance that if this problem is addressed then [MHMP Enterprise] might become very important for sites with complex topologies.
Advantages:
-	No need to own and operate a registered, Provider-Independent address space,
-	Preserves end-to-end communication,
-	In simple networks it may be as easy as plugging all CPE routers and client devices into the same L2 Network (i.e. Switch).
Disadvantages:
-	Scalability issues: easy for simple networks, but significantly more difficult in complex networks,
-	Prefixes may not get deprecated when the CPE itself fails, as opposed to just the link,
-	Not all issues are resolved yet, only the simplest scenario is possible (simple topology and unpredictable traffic distribution),
-	Carriers may frequently change the prefix (flash renumbering), and this could disrupt communication,
-	Sites with complex topologies are not well supported yet,
-	Traffic steering by any policies (including the capability to access “subscriber-only services”) is not supported yet.
